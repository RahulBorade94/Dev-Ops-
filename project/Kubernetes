
# KUBECTL INSTALLATION:
1 sudo apt update -y
2 curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s

https://storage.googleapis.com/kubernetes-
release/release/stable.txt`/bin/linux/amd64/kubectl

3 chmod +x ./kubectl
4 sudo mv ./kubectl /usr/local/bin/kubectl
5 kubectl version
===========================================================================================
# DOCKER INSTALLATION:
1 sudo apt-get install docker.io -y
2 sudo systemctl status docker
3 sudo usermod -aG docker $USER && newgrp docker

============================================================================================
# MINIKUBE INSTALLATION:

1 curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

2 chmod +x minikube
3 sudo mv minikube /usr/local/bin/
4 minikube version
5 sudo minikube start --vm-driver=none
 X Exiting due to GUEST_MISSING_CONNTRACK: Sorry, Kubernetes 1.22.3 requires conntrack
to be installed in root's path
6 sudo apt-get install -y conntrack
7 minikube start --vm-driver=none
8 minikube status
9 kubectl cluster-info
10 kubectl get events
11 kubectl config view
12 kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
13 kubectl get pods
==============================================================================================
# DEPLOYING AN APP

1 kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4
2 kubectl get deployment
3 kubectl expose deployment hello-node --type=NodePort --port=8080
4 kubectl get svc
5 curl -v public-ip:32548
6 minikube ip
7 curl -v private-ip:32548
8 http://private-ip:32548/
9 kubectl delete service hello-node
10 kubectl delete deployment hello-node
11 minikube stop
12 minikube delete




STEP-1: LAUNCH INSTANCE WITH T2.MEDIUM AND 30 GB SSD

STEP-2: INSTALL AWS CLI

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

TO CHECK VERSION: /usr/local/bin/aws --version
TO SET PATH: vim .bashrc

export PATH=$PATH:/usr/local/bin/
source .bashrc
aws --version
STEP-3: INSTALL KOPS & KUBECTL

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

wget https://github.com/kubernetes/kops/releases/download/v1.24.1/kops-linux-amd64

PERMISSIONS: chmod +x kops-linux-amd64 kubectl
MOVE FILES: mv kubectl /usr/local/bin/kubectl
MOVE FILES: mv kops-linux-amd64 /usr/local/bin/kops
TO SEE VERSION: kubectl version & kops version

STEP-4: CREATE IAM USER WITH ADMIN PERMISSIONS AND CONFIGURE IT IN ANY REGION WITH TABLE FORMAT

STEP-5: CREATE INFRA SETUP

TO CREATE BUCKET: aws s3api create-bucket --bucket nareshit.k8s.local --region us-east-1

TO ENABLE VERSION: aws s3api put-bucket-versioning --bucket nareshit.k8s.local --region us-east-1 --versioning-configuration Status=Enabled

EXPORT CLUSTER DATA INTO BUCKET: export KOPS_STATE_STORE=s3://nareshit.k8s.local

GENERATE-KEY: ssh-keygen
TO CREATE CLUSTER: kops create cluster --name nareshit.k8s.local --zones us-east-1a --master-size t2.medium --node-size t2.micro
TO SEE THE CLUSTER: kops get cluster
IF YOU WANT TO EDIT THE CLUSTER: kops edit cluster cluster_name
TO RUN THE CLUSTER: kops update cluster --name nareshit.k8s.local --yes

--admin
STEP-6: CREATE PODS

TO CREATE A POD: kops update cluster --name bhagi.k8s.local --yes --admin
TO CHECK THE PODS: kubectl get pods
TO CHECK THE POD IS RUNNING WHERE: kubectl get pods -o wide
TO CREATE A CONTIANER:

======================================================================================
vim pod-nginx.yml

apiVersion: v1
kind: Pod
metadata:
name: nginx
spec:
containers:
- image: nginx
name: nginx
================

TO DELETE EXISTING POD: kubectl delete pod nginx
TO CREATE A POD: kubectl create -f pod-nginx.yml
TO DEPLOY POD: we need to delete existing pod (kubectl delete pod nginx) &

write the code for deployment
============================================================
vim deployment-nginx.yml
apiVersion: apps/v1
kind: Deployment
metadata:
labels:
run: nginx
name: nginx-deploy
spec:
replicas: 2
selector:
matchLabels:
run: nginx
template:
metadata:
labels:
run: nginx
spec:
containers:
- image: nginx
name: nginx
===================================================================================

TO DEPLOY IT: kubectl create -f deployment-nginx.yml --validate=false
TO DELETE THE WHOLE CLUSTER: kops delete cluster --name cluster_name

--yes

======================================================================================
1 curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
2 unzip awscliv2.zip
3 sudo ./aws/install
4 aws configure   

access key_id
scerat key_id 
defualt regon - us-east-1
table

5 curl -LO "https://dl.k8s.io/release/$(curl -L -s
https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
6 wget https://github.com/kubernetes/kops/releases/download/v1.24.1/kops-linux-amd64
7 ll
8 chmod 777 kubectl kops-linux-amd64
9 ll
10 mv kubectl /usr/local/bin/kubectl
11 mv kops-linux-amd64 /usr/local/bin/kops
12 kubectl --version
13 kops --version
14 aws --version
15 vim .bashrc
16 source .bashrc
17 kubectl --version
18 kubectl version
19 kops --version
20 kops version
21 kops
22 aws s3api create-bucket --bucket nareshit.k8s.local --region us-east-1
23 aws s3api put-bucket-versioning --bucket nareshit.k8s.local --region us-east-1
--versioning-configuration Status=Enabled
24 export KOPS_STATE_STORE=s3://nareshit.k8s.local
25 ssh-keygen
26 kops create cluster --name nareshit.k8s.local --zones us-east-1a --master-size t2.medium
--node-size t2.micro
27 kops get cluster
28 kops edit cluster nareshit.k8s.local
29 kops edit ig --name=nareshit.k8s.local nodes-us-east-1a
30 kops update cluster --name nareshit.k8s.local --yes --admin
31 kops validate cluster --wait 10m
32 kops get cluster
33 kubectl get nodes
34 kubectl get nodes -o wide
35 kubectl get no
36 kubectl run pod1 --image nginx:alpine
37 kubectl get pod

38 kubectl get pod -o wide
39 kops get cluster -o wide
40 kubectl get cluster -o wide
41 kubectl get pod -o wide
42 kubectl get no -o wide
43 kubectl delete pod pod1
44 history
45 kops update cluster --name nareshit.k8s.local --yes --admin
46 kops delete cluster --name nareshit.k8s.local --yes --admin
47 history
