# Scripting: 

Bash scripts can be used for various purposes,
such as executing a shell command, running multiple commands together, customizing
administrative tasks, performing task automation etc.
So knowledge of bash programming basics is important for every Linux user.

cat /etc/shells
which bash

1 sudo yum update -y
2 sudo -i
3 vim file1
touch file1
mkdir dir1

4 ll
5 chmod 777 file1
6 sh file1
7 ll
8 cat /etc/shells
9  which bash
10 vim file2
#! /bin/bash
echo "hello world"
11 sh file2 
12 chmod +x file1
13 ./file1
14 vim file2
#! /bin/bash
echo "hello world" >abc.txt
15 sh file2 
16 vim file3
#! /bin/bash
count=10
if [ $count -eq 10 ]
then 
echo "true"
fi
17 sh file3
18 vim file3
#! /bin/bash
count=10
if [ $count -eq 10 ]
then
echo "true"
else
echo ""false"
fi 
19 sh file3
20 visudo
21 vim file4
((a=10*20))
echo $a
21 sh file4
# single line commands
22 vim file4
#! /bin/bash
((a=10*20))
# im going to print value of a
echo $a
23 sh file4
24 vim file4
#! /bin/bash
((a=10*20))
# im going to print value of a
<< /// 
hai
all
good evening 
/// 
echo $a
25 sh file4
26 crontab -e

*/1 * * * *  echo "hii raham" >/tmp/abc.txt
27 cd /tmp/
28 ll
29 cat abc.txt
30 crontab -e
*/1 * * * *  echo "hii raham" >> /tmp/abc.txt
31 cat abc.txt
32 crontab -e
*/1 * * * *  lscup >> /tmp/cpu.txt
33 crontab -l
34 ll
35 cat cpu.txt


==================================================================================


#! /bin/bash
echo "raham" > file.txt
==================================================================================

#! /bin/bash
count=10
if [$count -eq 10]
then
echo "true"
fi
==================================================================================

#!/bin/bash
echo "Printing text with newline"
echo -n "Printing text without newline"
echo -e "\nRemoving \t backslash \t characters\n" 
==================================================================================

#!/bin/bash

# Add two numeric value
((sum=25+35))

#Print the result
echo $sum

==================================================================================

#!/bin/bash
: '
The following script calculates
the square value of the number, 5.
'Or
<< ///
The following script calculates
the square value of the number, 5
///
((area=10*5))
echo $area 
==================================================================================
1 vim file1
#!/bin/bash

valid=true
count=1
while [ $valid ]
do
echo $count
if [ $count -eq 5 ];
then
break

fi
((count++))
done 

2 sh file1
#!/bin/bash
valid =false
if [ $value ]
then
echo "my name is raham"
else
"my name is not raham"
fi
3 sh file1
==================================================================================
1 vim file1
#!/bin/bash
echo "Enter Your Name"
read name
echo "Welcome $name"
2 sh file1
==================================================================================
1 vim file1
#!/bin/bash
n=10
if [ $n -lt 10 ];
then
echo "It is a one digit number"
else
echo "It is a two digit number"
fi
2 sh file1

1 vim file1
#!/bin/bash
read n
if [ $n -lt 10 ];
then
echo "It is a one digit number"
else
echo "It is a two digit number"
fi
2 sh file1
==================================================================================
1 vim file1
!/bin/bash

echo "Enter username"
read username
echo "Enter password"
read password

if [[ ( $username == "raham" && $password == "1234" ) ]]; then
echo "valid user"

else
echo "invalid user"
fi
2 sh file1
==================================================================================
1 vim file1
#!/bin/bash

echo "Enter your lucky number"
read n

if [ $n -eq 101 ];
then
echo "You got 1st prize"
elif [ $n -eq 510 ];
then
echo "You got 2nd prize"
elif [ $n -eq 999 ];
then
echo "You got 3rd prize"

else
echo "Sorry, try for the next time"
fi

2 sh file1
==================================================================================
1 vim file1
#!/bin/bash

echo "Enter your lucky number"
read n

if [ $n -eq 101 ];
then
echo "You got 1st prize"
elif [ $n -eq 510 ];
then
echo "You got 2nd prize"
elif [ $n -eq 999 ];
then
echo "You got 3rd prize"

else
echo "Sorry, try for the next time"
fi

2 sh file2
==================================================================================
1 vim file1
#!/bin/bash
echo "Total arguments : $#"
echo "1st Argument = $1"
echo "2nd argument = $2"

./filename Redhat ubuntu fedora centos 
2 sh file2
==================================================================================

#!/bin/bash

string1="Linux"
string2="unix"
echo "$string1$string2" 
==================================================================================


#!/bin/bash
echo "Enter directory name"
read n
mkdir $n
==================================================================================

#!/bin/bash
echo "Enter filename"
read n
touch $n 
==================================================================================

#!/bin/bash
echo "Enter directory name"
read ndir
if [ -d "$ndir" ]
then
echo "Directory exist"
else
`mkdir $ndir`
echo "Directory created"
fi
==================================================================================

#!/bin/bash
echo "Enter filename to remove"
read fn
rm -i $fn
==================================================================================

