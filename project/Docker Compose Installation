DOCKER COMPOSE INSTALLATION:

sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose --version
================================
DOCKER COMPOSE APP DEPLOY:

4 files:
1. app.py
2. docker-compose.yml
3. Dockerfile
4. requirements.txt
===========================
1. app.py:


import time

import redis
from flask import Flask

app = Flask(__name__)
cache = redis.Redis(host='redis', port=6379)

def get_hit_count():
    retries = 5
    while True:
        try:
            return cache.incr('hits')
        except redis.exceptions.ConnectionError as exc:
            if retries == 0:
                raise exc
            retries -= 1
            time.sleep(0.5)

@app.route('/')
def hello():
    count = get_hit_count()
    return 'Hello World! I have been seen {} times.\n'.format(count)

=========================================================================
2. docker-compose.yml

version: "3.9"
services:
  web:
    build: .
    ports:
      - "8123:5000"
  redis:
    image: "redis:alpine"
============================================================================
3. Dockerfile

FROM python:3.7-alpine
WORKDIR /code
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
RUN apk add --no-cache gcc musl-dev linux-headers
COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt
EXPOSE 5000
COPY . .
CMD ["flask", "run"]
===================================================================
3. requirements

flask
redis
=================================================================

COMMAND TO BUILD: docker compose up -d
===========================================================


DOCKER STACK:

docker-compose.yml

version: '3'
services:
  web:
    image: httpd:5000/test-app
    ports:
      - "8000:8000"
  redis:
     image: redis:alpine

=================================================
docker stack deploy --compose-file docker-compose.yml my-first-stack
docker stack ls
docker stack services <stack_name>
docker stack ps my-first-stack
docker stack rm my-first-stack
